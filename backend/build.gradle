/*
 * ────────────────────────────────────────────────────────────────────
 *   Gradle build for the “AliExpress‑Interoperability” assignment
 *   Java 21  •  Spring Boot 3.1.5  •  SOAP + XSD + RNG + Security
 * ────────────────────────────────────────────────────────────────────
 */
plugins {
    id 'java'
    id 'org.springframework.boot'        version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.0'   // keep
}

group   = 'com.interoperability'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {

    /* ── Spring stack ────────────────────────────────────────────── */
    implementation 'org.springframework.boot:spring-boot-starter-web'            // REST
    implementation 'org.springframework.boot:spring-boot-starter-web-services'   // SOAP  (Spring‑WS)
    implementation 'org.springframework.boot:spring-boot-starter-security'       // Basic‑Auth (later: JWT)

    /* ── WSDL generator dependency for Spring‑WS ─────────────────── */
    implementation 'wsdl4j:wsdl4j:1.6.3'   // required by DefaultWsdl11Definition

    /* ── JAXB (XML ↔ POJO) ───────────────────────────────────────── */
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    runtimeOnly   'org.glassfish.jaxb:jaxb-runtime:4.0.4'

    /* ── Relax‑NG validation (Jing) ──────────────────────────────── *
     * Exclude Saxon 8.7 to prevent “Unknown type of result: DOMResult”
     * that breaks WSDL generation. The JDK’s TransformFactory is fine.
     */
    implementation('com.thaiopensource:jing:20091111') {
        exclude group: 'net.sf.saxon', module: 'saxon'  // ← critical
    }

    /* ── Lombok ──────────────────────────────────────────────────── */
    compileOnly         'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    /* ── OPTIONAL: WebClient (RapidAPI calls) ────────────────────── */
    // implementation 'org.springframework.boot:spring-boot-starter-webflux'

    /* ── Tests ───────────────────────────────────────────────────── */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-parameters']   // helpful for Spring reflection
}
